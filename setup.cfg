# This file exists within 'config-decorator':
#
#   https://github.com/hotoffthehamster/config-decorator
#
# Copyright Â© 2019-2020 Landon Bouma. All rights reserved.
#
# Permission is hereby granted,  free of charge,  to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge,  publish,  distribute, sublicense,
# and/or  sell copies  of the Software,  and to permit persons  to whom the
# Software  is  furnished  to do so,  subject  to  the following conditions:
#
# The  above  copyright  notice  and  this  permission  notice  shall  be
# included  in  all  copies  or  substantial  portions  of  the  Software.
#
# THE  SOFTWARE  IS  PROVIDED  "AS IS",  WITHOUT  WARRANTY  OF ANY KIND,
# EXPRESS OR IMPLIED,  INCLUDING  BUT NOT LIMITED  TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE  FOR ANY
# CLAIM,  DAMAGES OR OTHER LIABILITY,  WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE,  ARISING FROM,  OUT OF  OR IN  CONNECTION WITH THE
# SOFTWARE   OR   THE   USE   OR   OTHER   DEALINGS  IN   THE  SOFTWARE.

[metadata]
# NOTE: Values specified in setup.py will shadow those here.
#   Except there are no values in setup().
name = config-decorator
author = HotOffThe Hamster
author-email = hotoffthehamster+configdecorator@gmail.com
home-page = https://github.com/hotoffthehamster/config-decorator
description = Class @decorator for defining exquisite settings configurations.
# (lb): Note that - and _ and interchangeable, e.g.,
#         long-description is the
# same as long_description.
long-description = file: README.rst
long-description-content-type = text/x-rst; charset=UTF-8
project_urls =
    # Bug Tracker = https://bugs.launchpad.net/config-decorator/
    Documentation = https://config-decorator.readthedocs.io/en/latest/
    Source Code = https://github.com/hotoffthehamster/config-decorator
license = MIT
license-file = LICENSE
platform = any
classifier =
    License :: OSI Approved :: MIT License
    # Development Status :: 2 - Pre-Alpha
    # Development Status :: 3 - Alpha
    # Development Status :: 4 - Beta
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python
    Topic :: Software Development :: Libraries :: Python Modules
keywords =
    library
    configuration
    settings
    options
    ini
    conf
    config

[options]
zip_safe = false
# Enable setuptools_scm/use_scm_version.
setup_requires =
    setuptools
    setuptools_scm

[coverage:report]
precision = 0

[coverage:run]
branch = True
source = config_decorator

[doc8]
ignore-path = .eggs/, *.egg-info/, .tox/, docs/_build/
max-line-length=89
# Specify encoding lest doc8 think it's 'Windows-1254' and raise UnicodeDecodeError.
file-encoding=utf-8
# DEVs: Uncomment verbose for TMI.
#  verbose=1

[flake8]
builtins = _
exclude = build/*.py, docs/*.py
max-line-length = 89
# See list of error codes:
#  https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes
# Some of these are necessary, and some are just preferences.
# - E711 comparison to None should be 'if cond is None:'
#   (lb): SQLAlchemy filter function honors `== None`, not `is None`, e.g.,
#           query = query.filter(AlchemyFact.activity == None)
# - W391: blank line at end of file
#   (lb): Personal preference. So that, e.g., Ctrl-End is predictable and
#   goes to first column of last line, which is empty; as opposed to going
#   to some unknown last column of a nonempty last line.
# - W503 line break before binary operator
#   (lb): I'm with Knuth, for readability. Prefer this:
#       if (some_thing
#           and another):
#           and another_thing):
#     over this:
#       if (some_thing and
#           another and
#           another_thing):
# - W605 invalid escape sequence
#   (lb): Happening on regex, e.g., '\d{2}' getting flagged, how weird.
ignore = W391,W503,W605

[isort]
# See: setup.cfg's [flake8] max-line-length = 89.
line_length=89
# multi_line_output: 3 - Vertical Hanging Indent.
multi_line_output=3
not_skip = __init__.py
known_third_party =
    # Testing packages
    factory
    faker
    fauxfactory
    freezegun
    past
    pytest
    pytest_factoryboy


[tool:pytest]
addopt =
	--tb=short
	--strict
	--rsx

[bdist_wheel]
universal = 1

